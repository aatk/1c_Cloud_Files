
&НаСервере
Функция РаспарситьJSON(Значение)
	ОбъектСервер = Обработки.ПрикрепленинеФайлов.Создать();	
	Результат = ОбъектСервер.ПрочитатьJSON(Значение);
	Возврат Результат;
КонецФункции
	
&НаКлиенте
Процедура ОтправитьФайл(Родитель) Экспорт
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие); 
	Диалог.Заголовок = "Выберите файл";
	Диалог.ПолноеИмяФайла = ""; 
	Диалог.МножественныйВыбор = Ложь; 
	Если Диалог.Выбрать() Тогда 
		Каталог = КаталогВременныхФайлов();
		ДополнительныеПараметры = Новый Структура("Файл, Родитель", Диалог.ПолноеИмяФайла, Родитель);
		ОтправитьФайлДействие(Каталог, ДополнительныеПараметры);		
	КонецЕсли; 
	
	Оповестить("ОбновитьТаблицу");
   
КонецПроцедуры


&НаСервере
Функция ЗагрузитьНастройки()
	
	Результат = Ложь;
	СтрокаСНастройками = Константы.НастройкиОбменаФайлами.Получить();
	Если ЗначениеЗаполнено(СтрокаСНастройками) Тогда
		Настройки = ЗначениеИзСтрокиВнутр(СтрокаСНастройками);
		ЗаполнитьЗначенияСвойств(Объект, Настройки);
		
		Результат = Истина;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции
	
&НаКлиенте
Процедура ОтправитьФайлДействие(ИмяКаталогаВременныхФайлов, ДополнительныеПараметры) Экспорт
	
	
	Итог = ЗагрузитьНастройки();
	Если НЕ Итог Тогда 
		Сообщить("Не определены настройки для обмена файлами, обратитесь к администратору!",СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	ВыбФайл = Новый Файл(ДополнительныеПараметры.Файл);
	Путь = ВыбФайл.Путь;
	ИмяФайла = ВыбФайл.Имя;
	
	ИмяФайлаОтвета = ИмяКаталогаВременныхФайлов + "answer.tmp";
	
	ИмяФайлаДляЗагрузки = ДополнительныеПараметры.Файл;
	ИспользоватьПрокси = Ложь;
	
	Boundary = СтрЗаменить(Строка(Новый УникальныйИдентификатор()), "-", "");
	
	Файл = Новый Файл(ИмяФайлаДляЗагрузки);
	
	ИмяФайлаОтправки = КаталогВременныхФайлов() + "post.txt";
	МассивФайловДляОбъединения = Новый Массив; 

	
	
	
	КодироватьФайл = Истина;
	СодержимоеФайла = Base64Строка(Новый ДвоичныеДанные(ИмяФайлаДляЗагрузки));
	
	ФайлОтправки = Новый ЗаписьТекста(ИмяФайлаОтправки, КодировкаТекста.ANSI, Символы.ПС, Ложь);
	//Определяем раздел двоичных данных
	ФайлОтправки.ЗаписатьСтроку("--" + Boundary);
	//Указываем имя файла для передачи
	//На сервере оно появится в массиве $_FILES['datafile']['name']
	ФайлОтправки.ЗаписатьСтроку("Content-Disposition: form-data; name=""file""; filename=""" + ИмяФайла + """");
	//Указываем тип передаваемых данных.
	//С таким же успехом в Content-Type можно указать application/x-octet-stream
	ФайлОтправки.ЗаписатьСтроку("Content-Type: application/x-zip-compressed" + Символы.ПС + Символы.ПС);
	//Записываем кодированные двоичные данные
	ФайлОтправки.ЗаписатьСтроку(СодержимоеФайла);
	ФайлОтправки.ЗаписатьСтроку("--" + Boundary);

	//Определяем раздел для каких либо других POST-данных, например содержимого полей виртуальной HTML-формы.

	//Соответствует полю HTML-формы input type="submit" name="submit" value="Submit" /
	ФайлОтправки.ЗаписатьСтроку("--" + Boundary);
	ФайлОтправки.ЗаписатьСтроку("Content-disposition: form-data; name=""submit""" + Символы.ПС);
	ФайлОтправки.ЗаписатьСтроку("1");
	ФайлОтправки.ЗаписатьСтроку("--" + Boundary);

	//Соответствует полю HTML-формы input type="checkbox" name="decode" value="decode" /
	ФайлОтправки.ЗаписатьСтроку("--" + Boundary);
	ФайлОтправки.ЗаписатьСтроку("Content-disposition: form-data; name=""decode""" + Символы.ПС);
	ФайлОтправки.ЗаписатьСтроку(?(КодироватьФайл, "1", "0"));
	ФайлОтправки.ЗаписатьСтроку("--" + Boundary);

	//Соответствует полю HTML-формы input type="text" name="some_field" value="Some text" /
	ФайлОтправки.ЗаписатьСтроку("--" + Boundary);
	ФайлОтправки.ЗаписатьСтроку("Content-disposition: form-data; name=""filename""" + Символы.ПС);
	ФайлОтправки.ЗаписатьСтроку(ИмяФайла);
	
	Если ДополнительныеПараметры.Свойство("Родитель") Тогда
		ФайлОтправки.ЗаписатьСтроку("--" + Boundary);
		ФайлОтправки.ЗаписатьСтроку("Content-disposition: form-data; name=""parent""" + Символы.ПС);
		ФайлОтправки.ЗаписатьСтроку(ДополнительныеПараметры.Родитель);
	КонецЕсли;
	
	//Завершение сообщения для сервера
	ФайлОтправки.ЗаписатьСтроку("--" + Boundary + "--");

	ФайлОтправки.Закрыть();
	
	
	
    ЗаголовокHTTP = Новый Соответствие(); 
	//Обязательные поля заголовка      
	//Укажем формат данных Content-Type 
    ЗаголовокHTTP.Вставить("Content-Type", "multipart/form-data; boundary=" + Boundary); 
	
	ФайлОтправки = Новый Файл(ИмяФайлаОтправки); 
	РазмерФайлаОтправки = XMLСтрока(ФайлОтправки.Размер()); 
	ЗаголовокHTTP.Вставить("Content-Length", РазмерФайлаОтправки);
		
    СерверПриемник = Объект.Сервер; //Естественно, следует указать свой адрес. 
    Порт = "80"; //Это общепринятый порт. Возможно, для вашего сервера применяется другой. Конкретное значение уточните у хостера. 

    //ИспользоватьПрокси - какая-то логическая переменная, может быть значение флажка на форме или переключатель 
    Если ИспользоватьПрокси Тогда 
        Прокси = Новый ИнтернетПрокси; 
        Прокси.НеИспользоватьПроксиДляЛокальныхАдресов = Истина; 
        //Прокси.Пароль = "ПарольПрокси"; // укажите своё значение 
        //Прокси.Пользователь = "ПользовательПрокси"; // укажите своё значение 
        НТТР = Новый HTTPСоединение( СерверПриемник , Порт, , , Прокси); 
    Иначе 
        НТТР = Новый HTTPСоединение( СерверПриемник , Порт); 
    КонецЕсли; 
	
	
	Попытка
	    АдресСкрипта = "/"+Объект.Скрипт+"setimage/"; //Без протокола http:// и имени домена. Естественно, следует указать имя своего скрипта.

	    //Формируем HTTP запрос
	    ЗапросHTTP = Новый HTTPЗапрос(АдресСкрипта, ЗаголовокHTTP);
	    ЗапросHTTP.УстановитьИмяФайлаТела(ИмяФайлаОтправки);  //Устанавливает имя файла, из которого будет прочитано тело POST-запроса.

	    //Ответ от сервера получим в возвращаемом значении типа HTTPОтвет
	    ОтветHTTP = НТТР.ОтправитьДляОбработки(ЗапросHTTP);
	Исключение
	    //Реализацию процедуры УстановитьHTML смотреть в прилагаемой обработке
	    //УстановитьHTML("Неудачная попытка соединения с " + СерверПриемник + ": " + ОписаниеОшибки());
	    Возврат;
	КонецПопытки;
	ЗапросHTTP = Неопределено;
	//Удаляем файлы POST-запроса и фрагменты сообщения. Больше они не нужны.
	УдалитьФайлы(ИмяФайлаОтправки);
	Для каждого ЭлементМассива Из МассивФайловДляОбъединения Цикл
	    УдалитьФайлы(ЭлементМассива);
	КонецЦикла;	
	
	
	
	Текст = ОтветHTTP.ПолучитьТелоКакСтроку();
	
	Если Текст <> "" Тогда
		Соответствие = РаспарситьJSON(Текст);
		Ошибка = Соответствие.Получить("error");
		Если ЗначениеЗаполнено(Ошибка) Тогда
			Сообщить(Соответствие.Получить("error"),СтатусСообщения.Важное);
		КонецЕсли;
	КонецЕсли;
	
			
КонецПроцедуры